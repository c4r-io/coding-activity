import React, { useEffect, useState } from 'react'

const CheckboxWithShadow = ({ onUpdate, text, defaultValue }) => {
    const [checked, setChecked] = React.useState(false)
    const toggleCheck = (e) => {
        setChecked(e)
        onUpdate(e)
    }
    useEffect(() => {
    setChecked(defaultValue)
    },[defaultValue])
    return (
        <button className="flex items-center" onClick={() => toggleCheck(!checked)}>
            <svg width={24} height={24} viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g filter="url(#filter0_i_52_2)">
                    <rect width={34} height={34} fill="#828282" />
                </g>
                <rect x="1.5" y="1.5" width={31} height={31} stroke="#C7C7C7" strokeWidth={3} />
                {/* check */}
                {checked ?
                    <path d="M14.774 23.7447L9.24895 18.079C8.91702 17.7386 8.91702 17.1867 9.24895 16.8462L10.451 15.6135C10.7829 15.2731 11.3212 15.2731 11.6531 15.6135L15.375 19.4302L23.3469 11.2553C23.6788 10.9149 24.2171 10.9149 24.549 11.2553L25.7511 12.488C26.083 12.8284 26.083 13.3803 25.7511 13.7207L15.976 23.7447C15.6441 24.0851 15.1059 24.0851 14.774 23.7447Z" fill="white" />
                    : <path d="M23.9394 23.976C24.1154 24.296 24.1874 24.576 24.1554 24.816C24.1394 25.056 24.1154 25.256 24.0834 25.416C24.0354 25.592 23.9154 25.744 23.7234 25.872C23.5474 25.984 23.3474 26.072 23.1234 26.136C22.8354 26.216 22.5954 26.232 22.4034 26.184C22.1634 26.136 21.9634 26.056 21.8034 25.944C21.7074 25.864 21.6194 25.792 21.5394 25.728C21.4594 25.648 21.3794 25.576 21.2994 25.512C21.2194 25.432 21.1474 25.36 21.0834 25.296C21.0194 25.232 20.9714 25.168 20.9394 25.104C20.9074 25.04 20.8754 25 20.8434 24.984C20.8274 24.952 20.8114 24.928 20.7954 24.912L17.6034 20.304L14.4354 24.912C14.4194 24.928 14.3954 24.952 14.3634 24.984C14.3474 25 14.3154 25.04 14.2674 25.104C14.2354 25.168 14.1874 25.232 14.1234 25.296C14.0754 25.36 14.0194 25.432 13.9554 25.512C13.8754 25.576 13.7874 25.648 13.6914 25.728C13.5954 25.792 13.5074 25.864 13.4274 25.944C13.3314 26.008 13.2274 26.056 13.1154 26.088C13.0194 26.12 12.9234 26.152 12.8274 26.184C12.6194 26.232 12.3954 26.216 12.1554 26.136C11.6594 26.024 11.3154 25.784 11.1234 25.416C11.0274 25.224 10.9874 25.024 11.0034 24.816C11.0194 24.592 11.0674 24.368 11.1474 24.144C11.2434 23.92 11.3474 23.704 11.4594 23.496C11.5874 23.288 11.7154 23.088 11.8434 22.896C11.9074 22.816 11.9634 22.744 12.0114 22.68C12.0754 22.616 12.1394 22.544 12.2034 22.464C12.4114 22.192 12.6114 21.92 12.8034 21.648C12.9954 21.36 13.2034 21.056 13.4274 20.736L15.6594 17.496L12.3714 12.744L12.0834 12.336C12.0194 12.24 11.9554 12.152 11.8914 12.072C11.8274 11.992 11.7634 11.896 11.6994 11.784C11.6354 11.704 11.5714 11.616 11.5074 11.52C11.4434 11.424 11.3874 11.312 11.3394 11.184C11.2914 11.088 11.2434 11 11.1954 10.92C11.1634 10.824 11.1314 10.712 11.0994 10.584C11.0514 10.392 11.0354 10.216 11.0514 10.056C11.0994 9.848 11.2034 9.672 11.3634 9.528C11.4274 9.448 11.4994 9.384 11.5794 9.336C11.6754 9.288 11.7634 9.24 11.8434 9.192C12.0034 9.128 12.1474 9.08 12.2754 9.048C12.4034 9.016 12.5394 9 12.6834 9C12.9714 9.016 13.2434 9.12 13.4994 9.312C13.8194 9.52 14.1074 9.776 14.3634 10.08C14.4754 10.256 14.5874 10.424 14.6994 10.584C14.8114 10.728 14.9314 10.88 15.0594 11.04L15.0834 11.136C15.4834 11.664 15.8434 12.176 16.1634 12.672C16.4994 13.152 16.8674 13.664 17.2674 14.208C17.3314 14.288 17.3874 14.368 17.4354 14.448C17.4834 14.528 17.5394 14.608 17.6034 14.688C17.6674 14.608 17.7234 14.528 17.7714 14.448C17.8194 14.368 17.8754 14.288 17.9394 14.208C18.3074 13.664 18.6594 13.152 18.9954 12.672C19.3474 12.176 19.7154 11.664 20.0994 11.136L20.1474 11.04C20.2754 10.88 20.3954 10.728 20.5074 10.584C20.6354 10.424 20.7554 10.256 20.8674 10.08C21.1234 9.776 21.4114 9.52 21.7314 9.312C21.9714 9.12 22.2434 9.016 22.5474 9C22.8034 9 23.0754 9.064 23.3634 9.192C23.5554 9.304 23.6994 9.416 23.7954 9.528C23.9874 9.672 24.1074 9.848 24.1554 10.056C24.1714 10.216 24.1554 10.392 24.1074 10.584C24.0754 10.712 24.0354 10.824 23.9874 10.92C23.9554 11 23.8994 11.088 23.8194 11.184C23.7234 11.424 23.6194 11.624 23.5074 11.784C23.4434 11.896 23.3794 11.992 23.3154 12.072C23.2514 12.152 23.1954 12.24 23.1474 12.336L22.8594 12.744L19.5474 17.496L21.7794 20.736L23.0754 22.56C23.2194 22.8 23.3634 23.032 23.5074 23.256C23.6514 23.48 23.7954 23.72 23.9394 23.976Z" fill="white" />
                }
                {/* uncheck */}

                <defs>
                    <filter id="filter0_i_52_2" x={0} y={0} width={34} height={34} filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
                        <feFlood floodOpacity={0} result="BackgroundImageFix" />
                        <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                        <feMorphology radius={4} operator="erode" in="SourceAlpha" result="effect1_innerShadow_52_2" />
                        <feOffset />
                        <feGaussianBlur stdDeviation="0.5" />
                        <feComposite in2="hardAlpha" operator="arithmetic" k2={-1} k3={1} />
                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                        <feBlend mode="normal" in2="shape" result="effect1_innerShadow_52_2" />
                    </filter>
                </defs>
            </svg>

            <p className='ms-2'>{text}</p>
        </button>
    )
}

export default CheckboxWithShadow